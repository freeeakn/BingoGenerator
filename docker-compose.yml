version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://bingo_user:bingo_password@db:5432/bingo_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - POSTGRES_USER=bingo_user
      - POSTGRES_PASSWORD=bingo_password
      - POSTGRES_DB=bingo_db
    depends_on:
      - db
      - redis
    networks:
      - bingo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=bingo_user
      - POSTGRES_PASSWORD=bingo_password
      - POSTGRES_DB=bingo_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bingo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bingo_user -d bingo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bingo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  bingo_network:
    driver: bridge 